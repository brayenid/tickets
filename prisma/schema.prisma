// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @id
  name      String
  email     String   @unique
  password  String
  address   String   @default("0")
  role      String   @default("admin")
  birth     String   @default("1970-01-01")
  avatar    String   @default("null")
  isActive  Boolean  @default(false)
  gender    String   @default("unknown")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Orders    Orders[]
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model Events {
  id          String        @id
  name        String
  vendor      String        @default("Kita Tiket")
  location    String
  date        String
  description String
  isOpen      Boolean       @default(true)
  isSale      Boolean       @default(false)
  thumbnail   String        @default("null")
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now())
  EventPrices EventPrices[]
  Orders      Orders[]
}

model EventPrices {
  id         String       @id
  name       String
  price      Int
  event      Events       @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId    String
  stock      Int
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @default(now())
  OrderItems OrderItems[]
}

model OrderItems {
  id           String       @id @default(cuid())
  order        Orders?      @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId      String?
  amount       Int
  EventPrice   EventPrices? @relation(fields: [eventPriceId], references: [id])
  eventPriceId String?
  quantity     Int
  category     String       @default("basic")
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now())
  Tickets      Tickets[]
}

model Tickets {
  id            String     @id
  transaction   OrderItems @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  transactionId String
  isActive      Boolean    @default(false)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now())
}

model Orders {
  id           String       @id
  paymentToken String       @default("0")
  redirectUrl  String       @default("0")
  status       String       @default("pending")
  source       String       @default("0")
  event        Events       @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId      String
  user         Users        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now())
  OrderItems   OrderItems[]
}
